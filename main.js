!function(){"use strict";var e="",t=e+"d3610e9c6dce3cb370d8.svg",r=e+"d38272e02bb4f1ab1c37.svg",o=e+"40608da7369d39bc1077.svg";function n(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Save";e.textContent=t?r:o}const a={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"},s=(e,t,r)=>{const o=e.querySelector(`.${t.id}-error`);t.classList.remove(r.inputErrorClass),o.classList.remove(r.errorClass),o.textContent=""},c=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?i(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)},i=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},l=e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((t=>{t.addEventListener("submit",(e=>{e.preventDefault()})),((e,t)=>{const r=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);c(r,o,t),r.forEach((n=>{n.addEventListener("input",(()=>{((e,t,r)=>{t.validity.valid?s(e,t,r):((e,t,r,o)=>{const n=e.querySelector(`.${t.id}-error`);t.classList.add(o.inputErrorClass),n.classList.add(o.errorClass),n.textContent=r})(e,t,t.validationMessage,r)})(e,n,t),c(r,o,t)}))}))})(t,e)}))};l(a),document.getElementById("header__logo").src=t,document.getElementById("profile__edit-icon").src=r,document.getElementById("profile__post-icon").src=o;const d=document.getElementById("profile__avatar"),u=document.querySelector("#avatar-modal"),m=document.forms["edit-avatar"],_=document.querySelector(".profile__avatar-btn"),h=u.querySelector("#avatar-link"),v=document.querySelector(".profile__edit-button"),f=document.querySelector("#edit-modal"),y=document.forms["edit-profile"],p=f.querySelector("#profile-name"),b=f.querySelector("#profile-description"),S=document.querySelector(".profile__name"),E=document.querySelector(".profile__description"),g=document.querySelector(".profile__post-button"),q=document.querySelector("#post-modal"),L=document.forms["new-post-form"],k=q.querySelector("#card-link"),C=q.querySelector("#card-name"),$=q.querySelector(".modal__submit-button"),j=document.querySelector(".cards__list"),U=document.querySelectorAll(".modal"),x=document.querySelector("#card-template"),I=document.querySelector("#modal-preview"),P=I.querySelector(".modal__image-name"),A=I.querySelector(".modal__image"),D=document.querySelector("#modal-delete"),B=D.querySelector(".modal__form"),w=document.querySelector(".modal__cancel-button"),T=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addNewCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}changeLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"cb408f20-cef0-4ee4-a289-c2194b9dd6d5","Content-Type":"application/json"}});let N,O;function J(e){console.log(e);const t=x.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__text"),o=t.querySelector(".card__image"),n=t.querySelector(".card__heart-button"),a=t.querySelector(".card__trash-button");return r.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked&&n.classList.toggle("card__heart-button_liked"),n.addEventListener("click",(t=>{!function(e,t){const r=e.target.classList.contains("card__heart-button_liked");T.changeLikeStatus(t,r).then((()=>{e.target.classList.toggle("card__heart-button_liked")})).catch((e=>{console.error(e)}))}(t,e._id)})),a.addEventListener("click",(()=>function(e,t){N=e,O=t._id,H(D)}(t,e))),o.addEventListener("click",(()=>function(e){H(I),P.textContent=e.name,A.src=e.link,A.alt=e.name}(e))),t}function H(e){e.classList.add("modal_opened"),document.addEventListener("keydown",M),document.addEventListener("click",F)}function z(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",M),document.removeEventListener("click",F)}function M(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&z(e)}}function F(e){if(e.target===w){const e=document.querySelector(".modal_opened");e&&z(e)}}T.getAppInfo().then((e=>{let[t,r]=e;S.textContent=t.name,E.textContent=t.about,d.src=t.avatar,r.forEach((e=>{!function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=J(e);j[t](r)}(e,"append")}))})).catch((e=>{console.error(e)})),v.addEventListener("click",(()=>{var e,t;p.value=S.textContent,b.value=E.textContent,e=f,t=a,[p,b].forEach((r=>{s(e,r,t)})),H(f)})),_.addEventListener("click",(()=>{H(u)})),g.addEventListener("click",(()=>{H(q)})),U.forEach((e=>{e.addEventListener("mousedown",(t=>{t.target.classList.contains("modal_opened")&&z(e),t.target.classList.contains("modal__close-button")&&z(e)}))})),y.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;n(t,!0),T.editUserInfo({name:p.value,about:b.value}).then((e=>{S.textContent=e.name,E.textContent=e.about,z(f)})).catch((e=>{console.error(e)})).finally((()=>{n(t,!1)}))})),L.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;n(t,!0),T.addNewCard({name:C.value,link:k.value}).then((t=>{const r=J(t);j.prepend(r),e.target.reset(),i($,a),z(q)})).catch((e=>{console.error(e)})).finally((()=>{n(t,!1)}))})),B.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;n(t,!0,"Deleting...","Delete"),T.removeCard(O).then((()=>{N.remove(),z(D)})).catch((e=>{console.error(e)})).finally(n(t,!1,"Deleting...","Delete"))})),m.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;n(t,!0),T.editAvatar({avatar:h.value}).then((t=>{d.src=t.avatar,z(u),e.target.reset()})).catch((e=>{console.error(e)})).finally((()=>{n(t,!1)}))})),l(a)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,