!function(){"use strict";var e="",t=e+"80804e27ce061efd1ffb.svg",r=e+"49e44e5e03758262e8bf.svg",n=e+"975792ea68af0a3c209d.svg";function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Save";e.textContent=t?r:n}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(n,!0,r,a),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(n,!1,r,a)}))}const s={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"},c=(e,t,r)=>{const n=e.querySelector(`.${t.id}-error`);t.classList.remove(r.inputErrorClass),n.classList.remove(r.errorClass),n.textContent=""},i=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?d(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)},d=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},l=e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((t=>{t.addEventListener("submit",(e=>{e.preventDefault()})),((e,t)=>{const r=Array.from(e.querySelectorAll(t.inputSelector)),n=e.querySelector(t.submitButtonSelector);i(r,n,t),r.forEach((o=>{o.addEventListener("input",(()=>{((e,t,r)=>{t.validity.valid?c(e,t,r):((e,t,r,n)=>{const o=e.querySelector(`.${t.id}-error`);t.classList.add(n.inputErrorClass),o.classList.add(n.errorClass),o.textContent=r})(e,t,t.validationMessage,r)})(e,o,t),i(r,n,t)}))}))})(t,e)}))};l(s),document.getElementById("header__logo").src=t,document.getElementById("profile__edit-icon").src=r,document.getElementById("profile__post-icon").src=n;const u=document.getElementById("profile__avatar"),m=document.querySelector("#avatar-modal"),h=document.forms["edit-avatar"],_=document.querySelector(".profile__avatar-btn"),f=m.querySelector("#avatar-link"),v=document.querySelector(".profile__edit-button"),p=document.querySelector("#edit-modal"),y=document.forms["edit-profile"],S=p.querySelector("#profile-name"),b=p.querySelector("#profile-description"),g=document.querySelector(".profile__name"),E=document.querySelector(".profile__description"),L=document.querySelector(".profile__post-button"),k=document.querySelector("#post-modal"),q=document.forms["new-post-form"],C=k.querySelector("#card-link"),U=k.querySelector("#card-name"),x=document.querySelector(".cards__list"),I=document.querySelectorAll(".modal"),$=document.querySelector("#card-template"),A=document.querySelector("#modal-preview"),B=A.querySelector(".modal__image-name"),w=A.querySelector(".modal__image"),R=document.querySelector("#modal-delete"),T=R.querySelector(".modal__form"),N=document.querySelector(".modal__cancel-button"),P=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResponse)}editAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}addNewCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._checkResponse)}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}changeLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"cb408f20-cef0-4ee4-a289-c2194b9dd6d5","Content-Type":"application/json"}});let D,O;function j(e){console.log(e);const t=$.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__text"),n=t.querySelector(".card__image"),o=t.querySelector(".card__heart-button"),a=t.querySelector(".card__trash-button");return r.textContent=e.name,n.src=e.link,n.alt=e.name,e.isLiked&&o.classList.toggle("card__heart-button_liked"),o.addEventListener("click",(t=>{!function(e,t){const r=e.target.classList.contains("card__heart-button_liked");P.changeLikeStatus(t,r).then((()=>{e.target.classList.toggle("card__heart-button_liked")})).catch((e=>{console.error(e)}))}(t,e._id)})),a.addEventListener("click",(()=>function(e,t){D=e,O=t._id,J(R)}(t,e))),n.addEventListener("click",(()=>function(e){J(A),B.textContent=e.name,w.src=e.link,w.alt=e.name}(e))),t}function J(e){e.classList.add("modal_opened"),document.addEventListener("keydown",z),document.addEventListener("click",M)}function H(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",z),document.removeEventListener("click",M)}function z(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&H(e)}}function M(e){if(e.target===N){const e=document.querySelector(".modal_opened");e&&H(e)}}P.getAppInfo().then((e=>{let[t,r]=e;g.textContent=t.name,E.textContent=t.about,u.src=t.avatar,r.forEach((e=>{!function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=j(e);x[t](r)}(e,"append")}))})).catch((e=>{console.error(e)})),v.addEventListener("click",(()=>{var e,t;S.value=g.textContent,b.value=E.textContent,e=p,t=s,[S,b].forEach((r=>{c(e,r,t)})),J(p)})),_.addEventListener("click",(()=>{J(m)})),L.addEventListener("click",(()=>{J(k)})),I.forEach((e=>{e.addEventListener("mousedown",(t=>{t.target.classList.contains("modal_opened")&&H(e),t.target.classList.contains("modal__close-button")&&H(e)}))})),y.addEventListener("submit",(function(e){a((function(){return P.editUserInfo({name:S.value,about:b.value}).then((e=>{g.textContent=e.name,E.textContent=e.about,H(p)}))}),e)})),q.addEventListener("submit",(function(e){a((function(){return P.addNewCard({name:U.value,link:C.value}).then((t=>{const r=j(t);x.prepend(r),d(e.submitter,s),H(k)}))}),e)})),T.addEventListener("submit",(function(e){a((function(){return P.removeCard(O).then((()=>{D.remove(),H(R)}))}),e,"Deleting...")})),h.addEventListener("submit",(function(e){a((function(){return P.editAvatar({avatar:f.value}).then((t=>{u.src=t.avatar,d(e.submitter,s),H(m)}))}),e)})),l(s)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,